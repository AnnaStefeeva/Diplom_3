{"name": "Переход по клику в \"Личный Кабинет\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome=126.0.6478.182)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7AA971F52+60322]\n\t(No symbol) [0x00007FF7AA8ECEC9]\n\t(No symbol) [0x00007FF7AA7A7EBA]\n\t(No symbol) [0x00007FF7AA79FEA2]\n\t(No symbol) [0x00007FF7AA7909C4]\n\t(No symbol) [0x00007FF7AA792212]\n\t(No symbol) [0x00007FF7AA790CF1]\n\t(No symbol) [0x00007FF7AA7904D1]\n\t(No symbol) [0x00007FF7AA790410]\n\t(No symbol) [0x00007FF7AA78E39D]\n\t(No symbol) [0x00007FF7AA78E9DC]\n\t(No symbol) [0x00007FF7AA7AAC91]\n\t(No symbol) [0x00007FF7AA83C5FE]\n\t(No symbol) [0x00007FF7AA81C21A]\n\t(No symbol) [0x00007FF7AA83BC80]\n\t(No symbol) [0x00007FF7AA81BFC3]\n\t(No symbol) [0x00007FF7AA7E9617]\n\t(No symbol) [0x00007FF7AA7EA211]\n\tGetHandleVerifier [0x00007FF7AAC894AD+3301629]\n\tGetHandleVerifier [0x00007FF7AACD36D3+3605283]\n\tGetHandleVerifier [0x00007FF7AACC9450+3563680]\n\tGetHandleVerifier [0x00007FF7AAA24326+790390]\n\t(No symbol) [0x00007FF7AA8F750F]\n\t(No symbol) [0x00007FF7AA8F3404]\n\t(No symbol) [0x00007FF7AA8F3592]\n\t(No symbol) [0x00007FF7AA8E2F9F]\n\tBaseThreadInitThunk [0x00007FFFB226257D+29]\n\tRtlUserThreadStart [0x00007FFFB3B8AF28+40]", "trace": "request = <SubRequest 'driver' for <Function test_go_to_account[chrome]>>\n\n    @allure.step('Открываем окно браузера')\n    # @pytest.fixture(params=['chrome', 'firefox'])\n    @pytest.fixture(params=['chrome'])\n    def driver(request):\n        if request.param == 'chrome':\n            driver = webdriver.Chrome()\n        else:\n            driver = webdriver.Firefox()\n    \n        driver.set_window_size(1920, 1080)\n>       driver.get(data.BASE_URL)\n\ntests\\conftest.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000236916C5580>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_NAME_NOT_RESOLVED\\\\n  (...07FF7AA8E2F9F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFFB226257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFFB3B8AF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\nE         (Session info: chrome=126.0.6478.182)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7AA971F52+60322]\nE       \t(No symbol) [0x00007FF7AA8ECEC9]\nE       \t(No symbol) [0x00007FF7AA7A7EBA]\nE       \t(No symbol) [0x00007FF7AA79FEA2]\nE       \t(No symbol) [0x00007FF7AA7909C4]\nE       \t(No symbol) [0x00007FF7AA792212]\nE       \t(No symbol) [0x00007FF7AA790CF1]\nE       \t(No symbol) [0x00007FF7AA7904D1]\nE       \t(No symbol) [0x00007FF7AA790410]\nE       \t(No symbol) [0x00007FF7AA78E39D]\nE       \t(No symbol) [0x00007FF7AA78E9DC]\nE       \t(No symbol) [0x00007FF7AA7AAC91]\nE       \t(No symbol) [0x00007FF7AA83C5FE]\nE       \t(No symbol) [0x00007FF7AA81C21A]\nE       \t(No symbol) [0x00007FF7AA83BC80]\nE       \t(No symbol) [0x00007FF7AA81BFC3]\nE       \t(No symbol) [0x00007FF7AA7E9617]\nE       \t(No symbol) [0x00007FF7AA7EA211]\nE       \tGetHandleVerifier [0x00007FF7AAC894AD+3301629]\nE       \tGetHandleVerifier [0x00007FF7AACD36D3+3605283]\nE       \tGetHandleVerifier [0x00007FF7AACC9450+3563680]\nE       \tGetHandleVerifier [0x00007FF7AAA24326+790390]\nE       \t(No symbol) [0x00007FF7AA8F750F]\nE       \t(No symbol) [0x00007FF7AA8F3404]\nE       \t(No symbol) [0x00007FF7AA8F3592]\nE       \t(No symbol) [0x00007FF7AA8E2F9F]\nE       \tBaseThreadInitThunk [0x00007FFFB226257D+29]\nE       \tRtlUserThreadStart [0x00007FFFB3B8AF28+40]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "description": "Переходим на форму логина, кликая по кнопке \"Личный Кабинет\", проверяем, что перешли на форму логина", "attachments": [{"name": "log", "source": "f66a0d23-721c-4859-bbe5-622ac11e7f4d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1721927244803, "stop": 1721927244803, "uuid": "308afeba-8d9b-41e7-b680-415fee376855", "historyId": "ad756c358b35cf035145d612c2c3221d", "testCaseId": "eac377462a5bfa3c0ecd123f7773c339", "fullName": "tests.test_transitions.TestTransitions#test_go_to_account", "labels": [{"name": "suite", "value": "Тесты переходов между страницами"}, {"name": "parentSuite", "value": "tests"}, {"name": "subSuite", "value": "TestTransitions"}, {"name": "host", "value": "LAPTOP-VA807S6M"}, {"name": "thread", "value": "87952-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_transitions"}]}